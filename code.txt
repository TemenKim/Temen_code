1. GIT
 - git : 오픈 소스 버전관리 시스템
  	 로컬에서 버전 관리
	 소프트웨어 개발 및 소스 코드 관리에 사용
	-> 버전 관리 프로그램

 - github : 클라우드 서버를 사용해서 로컬에서 버전 관리한 소스코드를 업로드하여
	    공유가능
	    -> 원격 저장소

2. 명령어
 - pwd 		: 현재 나의 디렉토리 경로
 - cd [이동경로] 	: 이동경로로 이동
 - ls 		: 폴더 리스트 조회
 - ls -al 	: 폴더 리스트 상세 조회
 - clear 	: 화면 깨끗하게 보기
 - mkdir [폴더이름] 	: 폴더 생성
 - rm -rf [폴더이름] 	: 폴더 삭제
 - rm -r [파일이름] 	: 파일 삭제
 - git init 	: 현재 디렉토리를 git의 저장소로 사용
 - vim [파일이름]	: 해당 파일 편집,
   		  해당 파일이 없을때는 새로 생성
	i	: 입력이 가능한 상태
	esc	: insert 상태를 빠져나온다.
	:wq 	: 저장 후 종료
	:q	: 종료
	:q!	: 강제 종료
 - cat [파일이름]	: 파일내용을 확인 할 수 있다.
 - git status 	: git 프로젝트 폴더의 상태를 확인
 - git add [파일이름]	: git 대상 파일 add
 - git config --global user.name [닉네임]
 - git config --global user.email [이메일주소]
  : 누구의 작업물인지 알 수 있다.1번만 해주면 된다.
 - git commit -m '[메세지 내용]'
  : 작업물 commit
 - git log 	: git log 확인
 - cd ../ 	: 상위 레파지토리 이동
 - exit 	: git bash 종료


--------------------------------------------------
1. 명령어
 - git log -p : 로그에서 출력되는 버전 간의 차이점을 
		 출력하고 싶을때
 - git log [id값] : id값 이전의 log만 보여진다
 - git diff [id값]..[id값] : 두 id값의 차이점을 파악
 - git diff : 방금 수정된 기능에 대해서 어떤 작업을
	    했는지 확인 할 수 있다.
 - git commit -am '[msg내용]' : add와 commit한꺼번에

2. branch
 - 원래 코드와는 상관없이 독립적으로 개발을 진행할 수 
 있는데, 이렇게 독립적으로 개발하는 것이 브랜치이다.
 - https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80
 - https://backlog.com/git-tutorial/kr/intro/intro1_1.html

 - git branch 			: branch 리스트를 보여준다.
 - git branch [branch이름] 	: 새로운 branch 만들기
 - git checkout [branch이름] 	: branch이름으로 대상 변경
 - git log --branches --decorate: 저장되어 있는 모든 branch의
				log가 보여지게 된다
 - git log --branches --decorate --graph : 앞에 그래프 추가
 - git log --branches --decorate --graph --oneline :
   로그 내용을 한줄로 보기 편하게 나열
 - git log master..newb 	: master에는 없고 newb에는 있는 것
 - git log -p newb..master	: newb에는 없고 master에는 있는 것

3. merge : branch 병합
 - git merge newb : newb를 master로 merge 한다.

4. gitHub
 - 1. 나의 소스코드를 백업
 - 2. 다른 사람과의 협업 가능
 - git clone [복사한 주소] [저장하고 싶은 디렉토리] : 
   디렉토리에 소스코드 복사
 - git log --reverse	: log를 거꾸로 보기
---------------------------------------------------------------------
1. github
 - ssh-keygen -t rsa -C "[이메일]"
 - git add [폴더명]
 - git commit -m [메세지]
 - git remote add origin [저장소 주소] : origin이라는 이름의 저장소를 add
 - git remote -v 		: 저장소 조회
 - git remote remove origin	: 저장소 삭제
 - git push origin master	: github에 push
 - git pull origin master	: github에 있는 소스코드 당겨오기


-- 30분
* 경로 		: D:\0900_GB_KJH\java
* 파일 생성 	: gittest.txt
* 내용		: first git
* add, commit, push -> github 확인

-- 2시 30분(중간체크, 캡쳐, 풀이)
* github 레파지토리 생성
* 경로 : /d
* 폴더생성
* 파일생성, 내용입력
* add, commit
* remote add, push
------
* 신규파일 생성, 내용입력
* 기존파일 수정, 내용추가
* add, commit
* push
------
* 신규파일 삭제
* add, commit
* push


* git_office 	: file2.txt 생성, 내용, add, commit, push
* git_home 	: pull 

	
















